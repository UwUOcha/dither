name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Install cargo-audit
        run: command -v cargo-audit || cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

      - name: Install nightly toolchain for cargo-udeps
        uses: dtolnay/rust-toolchain@nightly

      - name: Install cargo-udeps
        run: command -v cargo-udeps || cargo install cargo-udeps --locked

      - name: Run cargo udeps
        run: cargo +nightly udeps

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    needs: [check, test]
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-
            ${{ runner.os }}-cargo-

      - name: Build release binary
        run: cargo build --release --verbose

      - name: Strip binary
        run: strip target/release/wallpaper

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: wallpaper-linux-x86_64
          path: target/release/wallpaper
          retention-days: 90

      - name: Create release archive
        run: |
          mkdir -p dist
          cp target/release/wallpaper dist/
          cp README.md dist/
          cp LICENSE dist/
          cd dist
          tar -czf ../wallpaper-linux-x86_64.tar.gz *

      - name: Upload release archive
        uses: actions/upload-artifact@v4
        with:
          name: wallpaper-linux-x86_64-archive
          path: wallpaper-linux-x86_64.tar.gz
          retention-days: 90
